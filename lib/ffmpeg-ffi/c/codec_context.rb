require 'ffmpeg-ffi/c/codec'
require 'ffmpeg-ffi/c/rational'

module FFmpeg
  module C
    class CodecContext < FFI::Struct
      FF_API_REQUEST_CHANNELS = FFmpeg.avcodec_version[0] < 56
      FF_API_GET_BUFFER = FFmpeg.avcodec_version[0] < 56
      AV_NUM_DATA_POINTERS = 8  # in libavutil/frame.h
      FF_API_LOWRES = FFmpeg.avcodec_version[0] < 56

      fields = [
        :av_class, :pointer,
        :log_level_offset, :int,
        :codec_type, :int,
        :codec, Codec.by_ref,
        :codec_name, [:char, 32],
        :codec_id, :int,
        :codec_tag, :uint,
        :stream_codec_tag, :uint,
        :priv_data, :pointer,
        :internal, :pointer,
        :opaque, :pointer,
        :bit_rate, :int,
        :bit_rate_tolerance, :int,
        :global_quality, :int,
        :compression_level, :int,
        :flags, :int,
        :flags2, :int,
        :extradata, :pointer,
        :extradata_size, :int,
        :time_base, Rational.by_value,
        :ticks_per_frame, :int,
        :delay, :int,
        :width, :int,
        :height, :int,
        :coded_width, :int,
        :coded_height, :int,
        :gop_size, :int,
        :pix_fmt, :int,
        :me_method, :int,
        :draw_horiz_band, :pointer,
        :get_format, :pointer,
        :max_b_frames, :int,
        :b_quant_factor, :float,
        :rc_strategy, :int,
        :b_frame_strategy, :int,
        :b_quant_offset, :float,
        :has_b_frames, :int,
        :mpeg_quant, :int,
        :i_quant_factor, :float,
        :i_quant_offset, :float,
        :lumi_masking, :float,
        :temporal_cplx_masking, :float,
        :spatial_cplx_masking, :float,
        :p_masking, :float,
        :dark_masking, :float,
        :slice_count, :int,
        :prediction_method, :int,
        :slice_offset, :pointer,
        :sample_aspect_ratio, Rational.by_value,
        :me_cmp, :int,
        :me_sub_cmp, :int,
        :mb_cmp, :int,
        :ildct_cmp, :int,
        :dia_size, :int,
        :last_predictor_count, :int,
        :pre_me, :int,
        :me_pre_cmp, :int,
        :pre_dia_size, :int,
        :me_subpel_quality, :int,
        :dtg_active_format, :int,
        :me_range, :int,
        :intra_quant_bias, :int,
        :inter_quant_bias, :int,
        :slice_flags, :int,
        :xvmc_acceleration, :int,
        :mb_decision, :int,
        :intra_matrix, :pointer,
        :inter_matrix, :pointer,
        :scenechange_threshold, :int,
        :noise_reduction, :int,
        :me_threshold, :int,
        :mb_threshold, :int,
        :intra_dc_precision, :int,
        :skip_top, :int,
        :skip_bottom, :int,
        :border_masking, :float,
        :mb_lmin, :int,
        :mb_lmax, :int,
        :me_penalty_compensation, :int,
        :bidir_refine, :int,
        :brd_scale, :int,
        :keyint_min, :int,
        :refs, :int,
        :chromaoffset, :int,
        :scenechange_factor, :int,
        :mv0_threshold, :int,
        :b_sensitivity, :int,
        :color_primaries, :int,
        :color_trc, :int,
        :colorspace, :int,
        :color_range, :int,
        :chroma_sample_location, :int,
        :slices, :int,
        :field_order, :int,
        :sample_rate, :int,
        :channels, :int,
        :sample_fmt, :int,
        :frame_size, :int,
        :frame_number, :int,
        :block_align, :int,
        :cutoff, :int,
      ]
      if FF_API_REQUEST_CHANNELS
        fields += [:request_channels, :int]
      end
      fields += [
        :channel_layout, :uint64,
        :request_channel_layout, :int64,
        :audio_service_type, :int,
        :request_sample_fmt, :int,
      ]
      if FF_API_GET_BUFFER
        fields += [
          :get_buffer, :pointer,
          :release_buffer, :pointer,
          :reget_buffer, :pointer,
        ]
      end
      fields += [
        :get_buffer2, :pointer,
        :refcounted_frames, :int,
        :qcompress, :float,
        :qblur, :float,
        :qmin, :int,
        :qmax, :int,
        :max_qdiff, :int,
        :rc_qsquish, :float,
        :rc_qmod_amp, :float,
        :rc_qmod_freq, :int,
        :rc_buffer_size, :int,
        :rc_override_count, :int,
        :rc_override, :pointer,
        :rc_eq, :string,
        :rc_max_rate, :int,
        :rc_min_rate, :int,
        :rc_buffer_aggressivity, :float,
        :rc_initial_cplx, :float,
        :rc_max_available_vbv_use, :float,
        :rc_min_vbv_overflow_use, :float,
        :rc_initial_buffer_occupancy, :int,
        :coder_type, :int,
        :context_model, :int,
        :lmin, :int,
        :lmax, :int,
        :frame_skip_threshold, :int,
        :frame_skip_factor, :int,
        :frame_skip_exp, :int,
        :frame_skip_cmp, :int,
        :trellis, :int,
        :min_prediction_order, :int,
        :max_prediction_order, :int,
        :timecode_frame_start, :int64,
        :rtp_callback, :pointer,
        :rtp_payload_size, :int,
        :mv_bits, :int,
        :header_bits, :int,
        :i_tex_bits, :int,
        :p_tex_bits, :int,
        :i_count, :int,
        :p_count, :int,
        :skip_count, :int,
        :misc_bits, :int,
        :frame_bits, :int,
        :stats_out, :string,
        :stats_in, :string,
        :workaround_bugs, :int,
        :strict_std_compliance, :int,
        :error_concealment, :int,
        :debug, :int,
        :debug_mv, :int,
        :err_recognition, :int,
        :reordered_opaque, :int64,
        :hwaccel, :pointer,
        :hwaccel_context, :pointer,
        :error, [:uint64, AV_NUM_DATA_POINTERS],
        :dct_algo, :int,
        :idct_algo, :int,
        :bits_per_coded_sample, :int,
        :bits_per_raw_sample, :int,
      ]
      if FF_API_LOWRES
        fields += [:lowres, :int]
      end
      fields += [
        :coded_frame, :pointer,
        :thread_count, :int,
        :thread_type, :int,
        :active_thread_type, :int,
        :thread_safe_callbacks, :int,
        :execute, :pointer,
        :execute2, :pointer,
        :thread_opaque, :pointer,
        :nsse_weight, :int,
        :profile, :int,
        :level, :int,
        :skip_loop_filter, :int,
        :skip_idct, :int,
        :skip_frame, :int,
        :subtitle_header, :pointer,
        :subtitle_header_size, :int,
        :error_rate, :int,
        :pkt, :pointer,
        :vbv_delay, :uint64,
        :pkt_timebase, Rational.by_value,
        :codec_descriptor, :pointer,
      ]
      unless FF_API_LOWRES
        fields += [:lowres, :int]
      end
      fields += [
        :pts_correction_num_faulty_pts, :int64,
        :pts_correction_num_faulty_dts, :int64,
        :pts_correction_last_pts, :int64,
        :pts_correction_last_dts, :int64,
        :sub_charenc, :string,
        :sub_charenc_mode, :int,
        :skip_alpha, :int,
        :seek_preroll, :int,
      ]
      layout(*fields)
    end
  end
end
